You have the task to steer a cleaning device across a room with barriers. The room is square-shaped. The room is modelled as a system of grid cells. A room is divided into cells by an x and y-coordinate system, each starting at 0. A cell is identified by the coordinate associated with its lower left corner. The room contains barriers, running only horizontally or vertically. The device exists and moves within the grid cells, but the barriers run along the grid lines. The boundaries of the room cannot be passed - essentially they also are a kind of barrier. The device can be moved by a simple set of commands. A command is enclosed by square brackets, and has two parts: a direction and the number of steps. A cleaning device can only be moved horizontally or vertically, not diagonally. If the device initially is located in the cell (1,2) and the command is [no,2], the cleaning device moves 2 cells up, and is then positioned on (1,4). The direction is either no (north), ea (east), so (south), or we (west). If the cleaning device meets a barrier or a room boundary, then it moves only as many steps as possible, and then stops. 

In my map of the space the device starts at (7, 7). The room is 11 cells wide and 8 cells high. The coordinate system begins at 0. Along with the barriers at the room boundaries, there are four barriers, along the length between the co-ordinates: (2,1)-(10,1) and (2,1)-(2,6) and (2,6)-(7,6) and (10,1)-(10,8). Some examples: the device starts at (7, 7). If the command is [ea,3] the device moves 2 cells to the right and then stops at (9, 7), because it is blocked by the barrier. If the command is [so,8] the device moves 6 cells down and stops at (7,1) because it is blocked by the barrier. If the device started at (3, 3) and the command is [we,3] then the device moves 1 cell to the left and stops at (2, 3) because it is blocked by the barrier. If the device started at (5,3) and the command is [no,5] then the device moves 3 cells up and then is blocked by the barrier. If the device starts at (7, 7) and the command is [no,1] then the device does not move, as it is blocked by the room boundary. If the command is [we,9] the device moves 7 cells to the left and stops at (0, 7), as it is blocked by the room boundary. If the device starts at (8,0) and the command is [ea,6] then the device moves 2 cells to the right and stops at (10,0) as it is blocked by the room boundary. 

Use this information to write the Java class thkoeln.st.st2praktikum.exercise.Exercise0, using my map to define the starting location of the device (7, 7), the size of the room (11 cells wide and 8 cells high), and the locations of the barriers (fully between the co-ordinates: (2,1)-(10,1) and (2,1)-(2,6) and (2,6)-(7,6) and (10,1)-(10,8)). Remember that the barriers lie along the grid lines, not the grid cells. The class has to implement the interface: java public interface Moveable { String move(String moveCommandString); } The code must be able to parse the input command string moveCommandString with the exact format "[no,2]". The expected return value is the coordinate of the location of the cleaning device afterwards, e.g. "(2,4)".